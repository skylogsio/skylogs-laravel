services:
    app:
        build: .
        container_name: skylogs_app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
        networks:
            - skylogs_net
        depends_on:
            - mongo
            - redis
        environment:
            - APP_ENV=local
            - APP_DEBUG=true
            - DB_CONNECTION=mongodb
            - DB_HOST=mongo
            - DB_PORT=27017
            - CACHE_DRIVER=redis
            - QUEUE_CONNECTION=redis
            - REDIS_HOST=redis
            - REDIS_PORT=6379

    nginx:
        image: nginx:latest
        container_name: skylogs_nginx
        restart: unless-stopped
        ports:
            - "8000:80"
        volumes:
            - .:/var/www
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        networks:
            - skylogs_net
        depends_on:
            - app

    mongo:
        image: mongo:latest
        container_name: skylogs_mongo
        restart: unless-stopped
        ports:
            - "27018:27017"
        networks:
            - skylogs_net
        volumes:
            - mongo_data:/data/db

    redis:
        image: redis:latest
        container_name: skylogs_redis
        restart: unless-stopped
        ports:
            - "6380:6379"
        networks:
            - skylogs_net

    horizon:
        build:
            context: .
            dockerfile: HorizonDockerfile
        container_name: skylogs_horizon
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
        depends_on:
            - app
            - mongo
            - redis
        networks:
            - skylogs_net


networks:
    skylogs_net:
        driver: bridge

volumes:
    mongo_data:
        driver: local
